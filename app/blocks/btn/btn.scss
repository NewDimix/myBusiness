.blobBtn {
	$numOfBlobs: 4;
	z-index: 1;
	position: relative;
	padding: 0;
	text-align: center;
	outline: none;
	border: none;
	transition: all 0.5s;
	cursor: pointer;
	text-decoration: none;
	display: inline-block;
	padding-left: 1.875em;
	padding-right: 1.875em;
	line-height: 2.5em;
	letter-spacing: 0.02em;
	@include —Åirce300;

	&::before {
		content: "";
		z-index: 1;
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		box-sizing: border-box;
	}

	&::after {
		content: "";
		z-index: -2;
		position: absolute;
		width: 100%;
		height: 100%;
		transition: all 0.3s 0.2s;
	}

	&:hover,
	&:focus {
		transform: scale(1.075);

		&::after {
			transition: all 0.3s;
			left: 0;
			top: 0;
		}
	}

	&:active {
		transform: scale(1);
	}

	&__inner {
		z-index: -1;
		overflow: hidden;
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
	}

	// additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
	&__blobs {
		position: relative;
		display: block;
		height: 100%;
		filter: url("#goo");
	}

	&__blob {
		position: absolute;
		height: 100%;
		border-radius: 100%;
		transform: translate3d(0, 150%, 0) scale(1.7);
		transition: transform 0.45s;

		@supports (filter: url("#goo")) {
			transform: translate3d(0, 150%, 0) scale(1.4);
		}

		@for $i from 1 through $numOfBlobs {
			&:nth-child(#{$i}) {
				left: ($i - 1) * calc(120% / $numOfBlobs);
				transition-delay: ($i - 1) * 0.08s;
			}
		}

		.blobBtn:hover &,
		.blobBtn:focus & {
			transform: translateZ(0) scale(1.7);

			@supports (filter: url("#goo")) {
				transform: translateZ(0) scale(1.4);
			}
		}
	}

	&_red {
		$fillBgColor: #ff9191;
		$fillColor: white;
		$bgColor: #fe5f5f;
		$color: white;
		$borderW: 2px;
		$borderR: 3.125em;
		$borderC: #fe5f5f;

		color: $color;
		border-radius: $borderR;

		&::before {
			border: $borderW solid $borderC;
			border-radius: $borderR;
		}

		&::after {
			left: $borderW * 1.5;
			top: $borderW * 1.5;
			border-radius: $borderR;
		}

		&:hover {
			color: $fillColor;
			border-radius: $borderR;

			&::after {
				border-radius: $borderR;
			}
		}

		.blobBtn__inner {
			border-radius: $borderR;
			background: $bgColor;
		}

		.blobBtn__blob {
			top: $borderW;
			width: calc(100% / $numOfBlobs);
			background: $fillBgColor;
		}
	}

	&_blue {
		$fillBgColor: #5987cc;
		$fillColor: white;
		$bgColor: #3865a7;
		$color: white;
		$borderW: 2px;
		$borderR: 3.125em;
		$borderC: #3865a7;

		color: $color;
		border-radius: $borderR;

		&::before {
			border: $borderW solid $borderC;
			border-radius: $borderR;
		}

		&::after {
			left: $borderW * 1.5;
			top: $borderW * 1.5;
			border-radius: $borderR;
		}

		&:hover {
			color: $fillColor;
			border-radius: $borderR;

			&::after {
				border-radius: $borderR;
			}
		}

		.blobBtn__inner {
			border-radius: $borderR;
			background: $bgColor;
		}

		.blobBtn__blob {
			top: $borderW;
			width: calc(100% / $numOfBlobs);
			background: $fillBgColor;
		}
	}

	&__arrow {
		display: inline-block;
		width: 0.8em;
		height: 2px;
		background-color: #fff;
		line-height: 2.5em;
		transform: translateY(-135%);
		margin-left: 0.5em;
		position: relative;

		&::before {
			content: "";
			width: 0.5em;
			height: 0.5em;
			background-color: #fff;
			position: absolute;
			right: 0;
			top: 50%;
			transform: translateY(-50%) translateX(40%) rotate(45deg);
			clip-path: polygon(0 0, 100% 100%, 100% 0);
		}
	}
}

#filterBtnSvg {
	position: absolute;
	visibility: hidden;
	width: 0;
	height: 0;
}
